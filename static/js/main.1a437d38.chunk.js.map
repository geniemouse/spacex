{"version":3,"sources":["assets/img/launch-home@2x.png","assets/img/launch-home.png","assets/img/launch-home@3x.png","assets/img/spacex-logo.png","utils.js","components/HeroImage/HeroImage.js","components/UI/Icon/Icon.js","components/LaunchData/LaunchDataItem/LaunchDataItem.js","components/LaunchData/LaunchData.js","components/ListControls/ListControls.js","containers/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","outputRange","values","increment","arguments","length","undefined","min","Array","isArray","Math","apply","Object","toConsumableArray","minValue","max","maxValue","temp","n","push","HeroImage","props","srcset","concat","defaultImg","hdx2Img","hdx3Img","react_default","a","createElement","className","srcSet","src","alt","Icon","classes","svgIcon","type","toLowerCase","react","d","fill","join","viewBox","aria-hidden","LaunchDataItem","flight_number","launch_date_utc","mission_name","rocket_name","dateTime","dateInput","date","Date","Number","isNaN","getTime","dateParts","toLocaleDateString","day","month","year","split","dateString","slice","getDateSuffix","formatDate","LaunchData","byYear","data","sortDescending","filteredData","filter","launch","launch_year","reverse","messageOutput","outputList","map","LaunchData_LaunchDataItem_LaunchDataItem","assign","key","replace","ListControls","changedSort","changedYear","disabled","years","collectLabelClasses","labelClasses","action","htmlFor","id","onChange","value","UI_Icon_Icon","name","baseUrl","launchQueryFilter","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","filterBySortDescending","filterByYear","launchData","loading","handleGetData","axios","get","params","timestamp","then","response","launches","reduce","accumulator","launchItem","_objectSpread","rocket","setState","catch","error","console","log","handleRefreshData","handleChangedYear","event","target","handleChangedSort","checked","_this$state","allYears","datum","memo","item","includes","buttonClasses","href","logo","onClick","components_ListControls_ListControls","components_LaunchData_LaunchData","components_HeroImage_HeroImage","Component","ReactDOM","render","containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1a437d38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/launch-home@2x.b7cae1c6.png\";","module.exports = __webpack_public_path__ + \"static/media/launch-home.23a1b6b8.png\";","module.exports = __webpack_public_path__ + \"static/media/launch-home@3x.59668b51.png\";","module.exports = __webpack_public_path__ + \"static/media/spacex-logo.950ba665.png\";","/**\n * Deduplicate an array\n * @param  {Array} arrayData\n * @return {Array}\n */\nexport function deDuplicateArray(arrayData) {\n    return arrayData.reduce((memo, item) => {\n        if (!memo.includes(item)) {\n            memo.push(item);\n        }\n        return memo;\n    }, []);\n}\n\n/**\n * Retrieve the minimum value from an array\n * @param  {Array} values\n * @return {Number}\n */\nexport function minValue(values) {\n    if (!Array.isArray(values) || !values.length) {\n        return;\n    }\n    return Math.min(...values);\n}\n\n/**\n * Retrieve the maximum value from an array\n * @param  {Array} values\n * @return {Number}\n */\nexport function maxValue(values) {\n    if (!Array.isArray(values) || !values.length) {\n        return;\n    }\n    return Math.max(...values);\n}\n\n/**\n * Create an array of sequential numbers within a range; with optional incremental jump\n * @param  {Array} values       -- An array of numbers or items that coerce to numbers\n * @param  {Number} increment   -- Optional number to increment by\n * @return {Array}\n */\nexport function outputRange(values, increment = 1) {\n    const min = minValue(values);\n    const max = maxValue(values);\n    const temp = [];\n\n    for (let n = min; n <= max; n += increment) {\n        temp.push(n);\n    }\n\n    return temp;\n}\n\n/**\n * Output date of month with suffix \"st\", \"nd\", \"rd\" or \"th\", as appropriate\n * @param  {String} dateString -- The date portion of datetime, e.g. 24 of date 24/03/2006\n * @return {String}\n */\nexport function getDateSuffix(dateString) {\n    const unitStr = dateString.slice(-1);\n    switch (unitStr) {\n        case \"1\":\n            return `${dateString}st`;\n        case \"2\":\n            return `${dateString}nd`;\n        case \"3\":\n            return `${dateString}rd`;\n        default:\n            return `${dateString}th`;\n    }\n}\n\n/**\n * Format a date string as \"DDth MMM YYY\"\n * e.g. \"24th Mar 2006\"\n * @param  {String} dateInput\n * @return {String}\n */\nexport function formatDate(dateInput) {\n    const dateSettings = { day: \"numeric\", month: \"short\", year: \"numeric\" };\n    // en-GB output: \"24 Mar 2006\"\n    const date = new Date(dateInput);\n\n    if (Number.isNaN(date.getTime())) {\n        return null;\n    }\n\n    // Hard-coding `en-GB` locale ensures day of month is first item and\n    // three-letter month is automatically created; good enough for demo\n    // @note: Working with multiple locales would require more dateString\n    // processing than this\n    const dateParts = date.toLocaleDateString(\"en-GB\", dateSettings).split(\" \");\n    dateParts[0] = getDateSuffix(dateParts[0]);\n    return dateParts.join(\" \");\n}\n","import React from \"react\";\n\nimport \"./HeroImage.css\";\n\nimport defaultImg from \"../../assets/img/launch-home.png\";\nimport hdx2Img from \"../../assets/img/launch-home@2x.png\";\nimport hdx3Img from \"../../assets/img/launch-home@3x.png\";\n\nfunction HeroImage(props) {\n    const srcset = `${defaultImg}, ${hdx2Img} 2x, ${hdx3Img} 3x`;\n\n    return (\n        <section className=\"image-decoration\">\n            {/*\n                - Design & dev-wise, this image could be rectanglular and\n                    utilize either mask or clip-path CSS\n                - @improvement: make an UI/Image component more re-usable by\n                    accepting image sources as props, etc\n            */}\n            <img srcSet={srcset} src={defaultImg} alt=\"\" />\n        </section>\n    );\n}\n\nexport default HeroImage;\n","import React, { Fragment } from \"react\";\n\nimport \"./Icon.css\";\n\nfunction Icon(props) {\n    // @todo: add propType checking to ensure we get a `props.type` passed-in\n    // @improvement: if there were more SVG icons and they were used in more places,\n    // this component could be turned into a sprite-referencing thing.\n\n    const classes = [\"icon\"];\n    let svgIcon = null;\n\n    switch (props.type.toLowerCase()) {\n        case \"arrowdown\":\n            classes.push(\"icon--arrowdown\");\n            svgIcon = (\n                <Fragment>\n                    <path d=\"M7 10l5 5 5-5z\" />\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                </Fragment>\n            );\n            break;\n\n        case \"refresh\":\n            classes.push(\"icon--refresh\");\n            svgIcon = (\n                <Fragment>\n                    <path d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\" />\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                </Fragment>\n            );\n            break;\n\n        case \"sort\":\n            classes.push(\"icon--sort\");\n            svgIcon = (\n                <Fragment>\n                    <path d=\"M9 3L5 6.99h3V14h2V6.99h3L9 3zm7 14.01V10h-2v7.01h-3L15 21l4-3.99h-3z\" />\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                </Fragment>\n            );\n            break;\n\n        default:\n            return svgIcon;\n    }\n\n    return (\n        <svg className={classes.join(\" \")} viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n            {svgIcon}\n        </svg>\n    );\n}\n\nexport default Icon;\n","import React from \"react\";\n\nimport { formatDate } from \"../../../utils.js\";\n\nimport \"./LaunchDataItem.css\";\n\nfunction LaunchDataItem(props) {\n    const { flight_number, launch_date_utc, mission_name, rocket_name } = props;\n\n    return (\n        <li>\n            <span className=\"flight-number\">#{flight_number}</span>\n            <h2 className=\"mission-name\">{mission_name}</h2>\n            <h3 className=\"rocket-name\">\n                <span className=\"visually-hidden\">Rocket name</span>\n                {rocket_name}\n            </h3>\n            <p className=\"launch-date\">\n                <time dateTime={launch_date_utc}>{formatDate(launch_date_utc)}</time>\n            </p>\n        </li>\n    );\n}\n\nexport default LaunchDataItem;\n","import React, { Fragment } from \"react\";\n\nimport LaunchDataItem from \"./LaunchDataItem/LaunchDataItem\";\n\nimport \"./LaunchData.css\";\n\nfunction LaunchData(props) {\n    const { byYear, data, sortDescending } = props;\n\n    const filteredData = data.filter((launch) => {\n        if (byYear === \"none\") {\n            return true;\n        }\n        return launch.launch_year === byYear;\n    });\n\n    // sortDescending will just reverse our filtered array order (not cloning,\n    // as it is already copied from data via filter method)\n    // @note: If we couldn't trust the data being delivered in chronological\n    // order, the more robust reverse would be to sort on the dateTime key\n    if (sortDescending) {\n        filteredData.reverse();\n    }\n\n    const messageOutput = (\n        <p className=\"data-message\">\n            {data.length ? `There are no results for ${byYear}.` : \"Retrieving launch data...\"}\n        </p>\n    );\n\n    const outputList = (\n        <ul className=\"launch-data\">\n            {filteredData.map((launch) => (\n                <LaunchDataItem\n                    key={`${launch.flight_number}-${launch.mission_name.replace(/\\s/g, \"-\")}`}\n                    {...launch}\n                />\n            ))}\n        </ul>\n    );\n\n    return <Fragment>{filteredData.length ? outputList : messageOutput}</Fragment>;\n}\n\nexport default LaunchData;\n","import React from \"react\";\n\nimport Icon from \"../UI/Icon/Icon\";\n\nimport \"./ListControls.css\";\n\nfunction ListControls(props) {\n    const { changedSort, changedYear, disabled, sortDescending, years } = props;\n\n    const collectLabelClasses = [\"button\"];\n    if (disabled) {\n        collectLabelClasses.push(\"button--disabled\");\n    }\n\n    const labelClasses = collectLabelClasses.join(\" \");\n\n    return (\n        <form className=\"list-controls\" action=\"/\">\n            {/* Should look into adding a form onSubmit callback too, so return key works... */}\n            <p className=\"select-wrapper\">\n                <label className={labelClasses} htmlFor=\"filter_year\">\n                    <span className=\"visually-hidden\">Filter by year</span>\n                    <select id=\"filter_year\" onChange={changedYear} disabled={disabled}>\n                        <option value=\"none\">Filter by Year</option>\n                        {(years || []).map((year) => (\n                            <option key={year} value={year}>\n                                {year}\n                            </option>\n                        ))}\n                    </select>\n                    <Icon type=\"arrowdown\" />\n                </label>\n            </p>\n\n            <p className=\"sort-toggle\">\n                <input\n                    id=\"filter_sort_descending\"\n                    name=\"filter_sort_descending\"\n                    type=\"checkbox\"\n                    onChange={changedSort}\n                    disabled={disabled}\n                />\n                <label className={labelClasses} htmlFor=\"filter_sort_descending\">\n                    <span className=\"label-text\">{sortDescending ? \"Sort Ascending\" : \"Sort Descending\"}</span>\n                    <Icon type=\"sort\" />\n                </label>\n            </p>\n        </form>\n    );\n}\n\nexport default ListControls;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { deDuplicateArray, outputRange } from \"../../utils.js\";\n\nimport HeroImage from \"../../components/HeroImage/HeroImage\";\nimport Icon from \"../../components/UI/Icon/Icon\";\nimport LaunchData from \"../../components/LaunchData/LaunchData\";\nimport ListControls from \"../../components/ListControls/ListControls\";\n\nimport logo from \"../../assets/img/spacex-logo.png\";\nimport \"./App.css\";\n\nconst baseUrl = \"https://api.spacexdata.com/v3/launches\";\nconst launchQueryFilter = [\"flight_number\", \"mission_name\", \"launch_date_utc\", \"launch_year\", \"rocket/rocket_name\"];\n\nfunction getYears(data) {\n    return data.map((datum) => datum.launch_year);\n}\n\nclass App extends Component {\n    state = {\n        filterBySortDescending: false,\n        filterByYear: \"none\",\n        launchData: [],\n        loading: true\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleGetData();\n    }\n\n    handleGetData = () => {\n        // @improvements:\n        // -- Store (local storage/serviceWorker) any previously collected data\n        //      to render on load; update with latest response, when it comes back\n        // -- With storage, could potentially refine the data filter to only\n        //      collect only new data, i.e. added launch dates\n\n        axios\n            .get(baseUrl, {\n                params: {\n                    filter: launchQueryFilter.join(\",\"),\n                    timestamp: new Date().getTime()\n                    // ^^ Demo quick cache-bust to ensure we reach out to the server\n                    // See comments above for proposed refinements to improve on this\n                }\n            })\n            .then((response) => {\n                const responseData = response.data;\n                const launches = responseData.reduce((accumulator, launchItem) => {\n                    // We are only interested on the rocket_name, not the rest\n                    // of the rocket object, so we'll flatten launch data into\n                    // one-dimensional object\n                    const launch = {\n                        ...launchItem,\n                        rocket_name: launchItem.rocket.rocket_name\n                    };\n                    // Remove unused rocket data\n                    delete launch.rocket;\n                    return accumulator.concat(launch);\n                }, []);\n\n                this.setState({\n                    launchData: launches,\n                    loading: false\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                this.setState({\n                    loading: false\n                });\n            });\n    };\n\n    handleRefreshData = () => {\n        // Resetting initial state, so refresh action is clear update\n        this.setState({\n            launchData: [],\n            loading: true\n        });\n\n        this.handleGetData();\n    };\n\n    handleChangedYear = (event) => {\n        this.setState({\n            filterByYear: event.target.value\n        });\n    };\n\n    handleChangedSort = (event) => {\n        this.setState({\n            filterBySortDescending: event.target.checked\n        });\n    };\n\n    render() {\n        const { launchData, filterBySortDescending, filterByYear } = this.state;\n\n        const allYears = getYears(launchData);\n        const uniqueYears = deDuplicateArray(allYears);\n        const years = outputRange(uniqueYears);\n\n        const buttonClasses = [\"button\", \"button--rounded\"];\n        if (!launchData.length) {\n            buttonClasses.push(\"button--disabled\");\n        }\n\n        return (\n            <div className=\"App\">\n                <a className=\"skip-link\" href=\"#main\">\n                    Skip to main content\n                </a>\n\n                <header className=\"constrain-width\">\n                    {/* @improvement: potential component if re-used more than once */}\n                    <h1 className=\"logo\">\n                        <img src={logo} alt=\"\" />\n                        <span className=\"visually-hidden\">SpaceX</span> Launches\n                    </h1>\n\n                    <p className=\"refresh-control\">\n                        {/* @improvement: potential component if re-used more than once */}\n                        <button\n                            className={buttonClasses.join(\" \")}\n                            disabled={!launchData.length}\n                            onClick={this.handleRefreshData}>\n                            Reload Data\n                            <Icon type=\"refresh\" />\n                        </button>\n                    </p>\n                </header>\n\n                <main id=\"main\" className=\"main-layout constrain-width\">\n                    <ListControls\n                        changedYear={this.handleChangedYear}\n                        changedSort={this.handleChangedSort}\n                        disabled={!launchData.length}\n                        sortDescending={filterBySortDescending}\n                        years={years}\n                    />\n                    <LaunchData data={launchData} byYear={filterByYear} sortDescending={filterBySortDescending} />\n                    <HeroImage />\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App/App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}